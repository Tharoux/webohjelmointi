{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kansiot\\\\Koulu\\\\Tietojenkasittely\\\\Webohjelmointi\\\\Demot\\\\GitHub\\\\webohjelmointi\\\\athlete\\\\src\\\\App.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport AthleteInfo from \"./components/AthleteInfo\";\nimport Athlete from \"./components/Athlete\";\nimport Header from \"./components/Header\";\nimport { Provider } from \"./context\";\nimport AddAthlete from \"./components/AddAthlete\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Info from \"./components/pages/Info\";\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    turvataso: \"keskisuuri\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: AthleteInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/info\",\n    component: Info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/athlete/add\",\n    component: AddAthlete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default App;\n\nconst mysql = require(\"mysql\");\n\nconst con = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\",\n  password: \"test\",\n  database: \"athletes\",\n  multipleStatements: true\n});\n\nfunction connectionStart() {\n  con.connect(err => {\n    if (err) {\n      console.log(\"Error connecting to DB.\");\n      return;\n    }\n\n    console.log(\"Connection established.\");\n  });\n}\n\nconnectionStart;\n\nfunction connectionEnd() {\n  con.end(err => {\n    if (err) {\n      console.log(\"Error in terminating the connection.\");\n      return;\n    }\n\n    console.log(\"Connection terminated.\");\n  });\n} //Injection preventer.\n\n\nconst userSubmittedVariable = \"1\";\ncon.query(`SELECT * FROM athleteinformation WHERE id = ${mysql.escape(userSubmittedVariable)}`, (err, rows) => {\n  if (err) throw err;\n  console.log(rows[0]);\n});\n\nconst path = require(\"path\");\n\nconst express = require(\"express\");\n\nconst bodyParser = require(\"body-parser\");\n\nconst app = express().use(bodyParser.json()); //Redirect to the index.html.\n\napp.get(\"/\", (req, res) => {\n  res.sendFile(path.join(__dirname, \"index.html\"));\n}); //Get all athletes.\n\napp.get(\"/athletes\", (req, res) => {\n  con.query(\"CALL get_all_athletes();\", (err, result) => {\n    if (err) throw err;\n    return res.status(200).json(result[0]);\n  });\n}); //Get an athlete.\n\napp.get(\"/athletes/:firstName-:lastName\", (req, res) => {\n  const firstname = String(req.params.firstName);\n  const lastname = String(req.params.lastName);\n  con.query(\"CALL get_athlete(?, ?)\", [firstname, lastname], (err, result) => {\n    if (err) throw err;\n    const athlete = result[0].find(athlete => athlete.firstName === firstname && athlete.lastName === lastname);\n    return res.json(athlete ? athlete : {\n      messae: \"Athlete not found.\"\n    });\n  });\n}); //Add an athlete\n\napp.post(\"/addathlete/\", (req, res) => {\n  //NÄMÄ TIEDOT LÄHETETÄÄN JSON-TIEDOSTONA SERVERILLE!\n  //Place the information from the body of the request to these variables.\n  const {\n    id,\n    firstName,\n    lastName,\n    callName,\n    yearOfBirth,\n    weight,\n    imageLink,\n    sport,\n    accomplishments\n  } = req.body;\n  con.query(\"CALL insert_athlete(@?, ?, ?, ?, ?, ?, ?, ?, ?);\", [id, firstName, lastName, callName, yearOfBirth, weight, imageLink, sport, accomplishments], (err, result) => {\n    if (err) throw err;\n    console.log(result);\n  });\n  return res.send({\n    message: \"Athlete added.\",\n    data: `Data on ${id + \" \" + firstName + \" \" + lastName + \" \" + callName + \" \" + yearOfBirth + \" \" + weight + \" \" + imageLink + \" \" + sport + \" \" + accomplishments.feat}`\n  });\n}); //Update an athlete\n\napp.put(\"/updateathlete/\", (req, res) => {\n  const {\n    id,\n    newFirstName,\n    newLastName,\n    newCallName,\n    newyob,\n    newWeight,\n    newImageLink,\n    newSport,\n    newAccomplishments\n  } = req.body;\n  con.query(\"CALL update_athlete(?,?,?,?,?,?,?,?,?);\", [id, newFirstName, newLastName, newCallName, newyob, newWeight, newImageLink, newSport, newAccomplishments], (err, result) => {\n    if (err) throw err;\n    console.log(result);\n  });\n  return res.send({\n    message: \"Athlete updated\",\n    data: `Data on ${id + \" \" + newFirstName + \" \" + newLastName + \" \" + newCallName + \" \" + newyob + \" \" + newImageLink + \" \" + newSport + \" \" + newAccomplishments}`\n  });\n}); //Delete an athlete\n\napp.delete(\"/deleteathlete/\", (req, res) => {\n  const {\n    id,\n    firstName,\n    lastName\n  } = req.body;\n  con.query(\"CALL delete_athlete(?, ?, ?)\", [id, firstName, lastName], (err, result) => {\n    if (err) throw err;\n  });\n  return res.send({\n    message: \"Athlete deleted.\",\n    data: `Data on ${id + \" \" + firstName + \" \" + lastName}`\n  });\n});\napp.listen(3000, () => {\n  console.log(\"Server listening at port 3000\");\n}); // Add headers\n\napp.use(function (req, res, next) {\n  // Website you wish to allow to connect\n  res.setHeader(\"Access-Control-Allow-Origin\", \"*\"); // Request methods you wish to allow\n\n  res.setHeader(\"Access-Control-Allow-Methods\", \"GET, POST, OPTIONS, PUT, PATCH, DELETE\"); // Request headers you wish to allow\n\n  res.setHeader(\"Access-Control-Allow-Headers\", \"X-Requested-With, Content-type\"); // Set to true if you need the website to include cookies in the requests sent\n  // to the API (e.g. in case you use sessions)\n\n  res.setHeader(\"Access-Control-Allow-Credentials\", true);\n  res.getHeaders(); // Pass to next layer of middleware\n\n  next();\n});","map":{"version":3,"sources":["D:/Kansiot/Koulu/Tietojenkasittely/Webohjelmointi/Demot/GitHub/webohjelmointi/athlete/src/App.js"],"names":["React","AthleteInfo","Athlete","Header","Provider","AddAthlete","BrowserRouter","Router","Route","Switch","Info","App","mysql","require","con","createConnection","host","user","password","database","multipleStatements","connectionStart","connect","err","console","log","connectionEnd","end","userSubmittedVariable","query","escape","rows","path","express","bodyParser","app","use","json","get","req","res","sendFile","join","__dirname","result","status","firstname","String","params","firstName","lastname","lastName","athlete","find","messae","post","id","callName","yearOfBirth","weight","imageLink","sport","accomplishments","body","send","message","data","feat","put","newFirstName","newLastName","newCallName","newyob","newWeight","newImageLink","newSport","newAccomplishments","delete","listen","next","setHeader","getHeaders"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport AthleteInfo from \"./components/AthleteInfo\";\nimport Athlete from \"./components/Athlete\";\nimport Header from \"./components/Header\";\nimport {Provider} from \"./context\";\nimport AddAthlete from \"./components/AddAthlete\";\nimport {BrowserRouter as Router, Route, Switch}  from \"react-router-dom\";\nimport Info from \"./components/pages/Info\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header turvataso=\"keskisuuri\"/>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={AthleteInfo}/>\n              <Route exact path=\"/info\" component={Info}/>\n              <Route exact path=\"/athlete/add\" component={AddAthlete}/>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n\nconst mysql = require(\"mysql\");\n\nconst con = mysql.createConnection({\n    host: \"localhost\",\n    user: \"root\",\n    password: \"test\",\n    database: \"athletes\",multipleStatements: true\n});\n\nfunction connectionStart() {\n    con.connect((err) => {\n        if (err) {\n            console.log(\"Error connecting to DB.\");\n            return;\n        }\n        console.log(\"Connection established.\");\n    });\n}\n\nconnectionStart;\n\nfunction connectionEnd() {\n    con.end((err) => {\n        if (err) {\n            console.log(\"Error in terminating the connection.\");\n            return;\n        }\n        console.log(\"Connection terminated.\");\n    })\n}\n\n//Injection preventer.\nconst userSubmittedVariable = \"1\";\n\ncon.query(\n    `SELECT * FROM athleteinformation WHERE id = ${mysql.escape(userSubmittedVariable)}`,\n    (err, rows) => {\n        if (err) throw err;\n        console.log(rows[0]);\n    }\n);\n\n\nconst path = require(\"path\");\nconst express = require(\"express\");\nconst bodyParser = require(\"body-parser\");\nconst app = express().use(bodyParser.json());\n\n//Redirect to the index.html.\napp.get(\"/\", (req,res) => {\n    res.sendFile(path.join(__dirname, \"index.html\"));\n});\n\n\n//Get all athletes.\napp.get(\"/athletes\", (req, res) => {\n    con.query(\n        \"CALL get_all_athletes();\", (err, result) => {\n            if (err) throw err;\n\n            return res.status(200).json(result[0]);\n        }\n    )\n});\n\n//Get an athlete.\napp.get(\"/athletes/:firstName-:lastName\", (req, res) => {\n    const firstname = String(req.params.firstName);\n    const lastname = String(req.params.lastName);\n\n    con.query(\n        \"CALL get_athlete(?, ?)\", [firstname, lastname], (err, result) => {\n            if (err) throw err;\n\n            const athlete = result[0].find((athlete) => (athlete.firstName === firstname && athlete.lastName === lastname));\n\n            return res.json(athlete ? athlete : {messae: \"Athlete not found.\"});\n        }\n    )\n}\n);\n\n//Add an athlete\napp.post(\"/addathlete/\", (req, res) => {\n\n    //NÄMÄ TIEDOT LÄHETETÄÄN JSON-TIEDOSTONA SERVERILLE!\n    //Place the information from the body of the request to these variables.\n    const {id, firstName, lastName, callName, yearOfBirth, weight, imageLink, sport, accomplishments} = req.body;\n\n    \n    con.query(\n        \"CALL insert_athlete(@?, ?, ?, ?, ?, ?, ?, ?, ?);\", [id, firstName, lastName, callName, yearOfBirth, weight, imageLink, sport, accomplishments], (err, result) => {\n            if (err) throw err;\n\n            console.log(result);\n        }\n    )\n\n    return res.send({\n        message: \"Athlete added.\",\n        data: `Data on ${id + \" \" + firstName + \" \" + lastName + \" \" + callName + \" \" + yearOfBirth + \" \" + weight + \" \" + imageLink + \" \" + sport + \" \" + accomplishments.feat}`\n    })\n}\n);\n\n//Update an athlete\napp.put(\"/updateathlete/\", (req, res) => {\n    const {id, newFirstName, newLastName, newCallName, newyob, newWeight, newImageLink, newSport, newAccomplishments} = req.body;\n\n    con.query(\n        \"CALL update_athlete(?,?,?,?,?,?,?,?,?);\", [id, newFirstName, newLastName, newCallName, newyob, newWeight, newImageLink, newSport, newAccomplishments], (err, result) => {\n            if (err) throw err;\n\n            console.log(result);\n        }\n    )\n\n    return res.send({\n        message: \"Athlete updated\",\n        data: `Data on ${id + \" \" + newFirstName + \" \" + newLastName + \" \" + newCallName + \" \" + newyob + \" \" + newImageLink + \" \" + newSport + \" \" + newAccomplishments}`\n    })\n});\n\n//Delete an athlete\napp.delete(\"/deleteathlete/\", (req, res) => {\n    const {id, firstName, lastName} = req.body;\n\n    con.query(\n        \"CALL delete_athlete(?, ?, ?)\", [id, firstName, lastName], (err, result) => {\n            if (err) throw err;\n        }\n    )\n\n    return res.send({\n        message: \"Athlete deleted.\",\n        data: `Data on ${id + \" \" + firstName + \" \" + lastName}`\n    })\n});\n\napp.listen(3000, () => {\n    console.log(\"Server listening at port 3000\");\n});\n\n// Add headers\napp.use(function (req, res, next) {\n    // Website you wish to allow to connect\n    res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n  \n    // Request methods you wish to allow\n    res.setHeader(\n      \"Access-Control-Allow-Methods\",\n      \"GET, POST, OPTIONS, PUT, PATCH, DELETE\"\n    );\n  \n    // Request headers you wish to allow\n    res.setHeader(\n      \"Access-Control-Allow-Headers\",\n      \"X-Requested-With, Content-type\"\n    );\n  \n    // Set to true if you need the website to include cookies in the requests sent\n    // to the API (e.g. in case you use sessions)\n    res.setHeader(\"Access-Control-Allow-Credentials\", true);\n  \n    res.getHeaders();\n  \n    // Pass to next layer of middleware\n    next();\n  });"]},"metadata":{},"sourceType":"module"}